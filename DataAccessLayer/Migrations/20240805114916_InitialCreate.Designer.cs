// <auto-generated />
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240805114916_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Entities.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AddressID"));

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TownID")
                        .HasColumnType("int");

                    b.HasKey("AddressID");

                    b.HasIndex("TownID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.BusinessType", b =>
                {
                    b.Property<int>("BussinessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BussinessID"));

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SICCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("BussinessID");

                    b.HasIndex("BusinessName");

                    b.ToTable("BusinessTypes");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BestContactMethod")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("JobRole")
                        .HasColumnType("longtext");

                    b.Property<string>("JobTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("KnownAs")
                        .HasColumnType("longtext");

                    b.Property<int>("ManagerNameId")
                        .HasColumnType("int");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("longtext");

                    b.Property<string>("OfficePhone")
                        .HasColumnType("longtext");

                    b.Property<string>("StHomePhone")
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Workbase")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ManagerNameId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CountryID"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = 1,
                            CountryName = "Vietnam"
                        },
                        new
                        {
                            CountryID = 2,
                            CountryName = "Singapo"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.County", b =>
                {
                    b.Property<int>("CountyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CountyID"));

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("CountyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CountyID");

                    b.HasIndex("CountryID");

                    b.ToTable("Counties");

                    b.HasData(
                        new
                        {
                            CountyID = 1,
                            CountryID = 1,
                            CountyName = "Hanoi1"
                        },
                        new
                        {
                            CountyID = 2,
                            CountryID = 2,
                            CountyName = "Sing1"
                        },
                        new
                        {
                            CountyID = 3,
                            CountryID = 1,
                            CountyName = "Hanoi2"
                        },
                        new
                        {
                            CountyID = 4,
                            CountryID = 2,
                            CountyName = "Sing2"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.GovernmentOfficeRegion", b =>
                {
                    b.Property<int>("GovernmentOfficeRegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("GovernmentOfficeRegionId"));

                    b.Property<int>("CountyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("GovernmentOfficeRegionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("GovernmentOfficeRegionId");

                    b.HasIndex("CountyId");

                    b.ToTable("GovernmentOfficeRegions");

                    b.HasData(
                        new
                        {
                            GovernmentOfficeRegionId = 1,
                            CountyId = 1,
                            Description = "Des1",
                            GovernmentOfficeRegionName = "GOV1",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 2,
                            CountyId = 2,
                            Description = "Des2",
                            GovernmentOfficeRegionName = "GOV2",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 3,
                            CountyId = 3,
                            Description = "Des3",
                            GovernmentOfficeRegionName = "AGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 4,
                            CountyId = 4,
                            Description = "Des4",
                            GovernmentOfficeRegionName = "BGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 5,
                            CountyId = 3,
                            Description = "Des5",
                            GovernmentOfficeRegionName = "FGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 6,
                            CountyId = 4,
                            Description = "Des6",
                            GovernmentOfficeRegionName = "MOV",
                            IsActive = false
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 7,
                            CountyId = 2,
                            Description = "Des7",
                            GovernmentOfficeRegionName = "POV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 8,
                            CountyId = 1,
                            Description = "Des8",
                            GovernmentOfficeRegionName = "TGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 9,
                            CountyId = 3,
                            Description = "Des9",
                            GovernmentOfficeRegionName = "XGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 10,
                            CountyId = 4,
                            Description = "Des10",
                            GovernmentOfficeRegionName = "ZGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 11,
                            CountyId = 4,
                            Description = "Des11",
                            GovernmentOfficeRegionName = "WGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 12,
                            CountyId = 2,
                            Description = "Des12",
                            GovernmentOfficeRegionName = "OGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 13,
                            CountyId = 3,
                            Description = "Des13",
                            GovernmentOfficeRegionName = "RGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 14,
                            CountyId = 1,
                            Description = "Des14",
                            GovernmentOfficeRegionName = "CGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 15,
                            CountyId = 2,
                            Description = "Des15",
                            GovernmentOfficeRegionName = "KGOV",
                            IsActive = false
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 16,
                            CountyId = 1,
                            Description = "Des16",
                            GovernmentOfficeRegionName = "GOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 17,
                            CountyId = 2,
                            Description = "Des17",
                            GovernmentOfficeRegionName = "IGOV",
                            IsActive = false
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 18,
                            CountyId = 3,
                            Description = "Des18",
                            GovernmentOfficeRegionName = "JGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 19,
                            CountyId = 2,
                            Description = "Des19",
                            GovernmentOfficeRegionName = "LGOV",
                            IsActive = false
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 20,
                            CountyId = 4,
                            Description = "Des20",
                            GovernmentOfficeRegionName = "HGOV",
                            IsActive = true
                        },
                        new
                        {
                            GovernmentOfficeRegionId = 21,
                            CountyId = 2,
                            Description = "Des21",
                            GovernmentOfficeRegionName = "0OV2",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ManagerName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ManagerNames");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Programme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Programmes");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Town", b =>
                {
                    b.Property<int>("TownID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TownID"));

                    b.Property<int>("CountyID")
                        .HasColumnType("int");

                    b.Property<string>("TownName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TownID");

                    b.HasIndex("CountyID");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Address", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Town", "Town")
                        .WithMany("Addresses")
                        .HasForeignKey("TownID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Town");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Contact", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.ManagerName", "ManagerName")
                        .WithMany("Contacts")
                        .HasForeignKey("ManagerNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagerName");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.County", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Country", "Country")
                        .WithMany("Counties")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.GovernmentOfficeRegion", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.County", "County")
                        .WithMany()
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("County");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Programme", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Town", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.County", "County")
                        .WithMany("Towns")
                        .HasForeignKey("CountyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("County");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Country", b =>
                {
                    b.Navigation("Counties");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.County", b =>
                {
                    b.Navigation("Towns");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ManagerName", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Town", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
